#FROM nvidia/cudagl:9.0-runtime-ubuntu16.04
FROM ubuntu:xenial
LABEL maintainer="Andrew Dornbush <andrew.dornbush@gmail.com>"

RUN apt-get update
RUN apt-get install -y sudo
RUN apt-get install -y lsb-release
RUN apt-get install -y locales

# Set the locale (for ruby)
RUN locale-gen en_US.UTF-8
ENV LANG en_US.UTF-8
ENV LANGUAGE en_US:en
ENV LC_ALL en_US.UTF-8
ENV USER rcta
ENV DEBIAN_FRONTEND noninteractive

# Create the rcta user, add to the sudoers list, and disable password
# requirement when using sudo
RUN adduser --disabled-password --gecos '' rcta
RUN adduser rcta sudo
RUN echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers

ENV HOME /home/rcta
WORKDIR /home/rcta
USER rcta

# Run (most?) of the commands in rcta_installers/first_time_setup.sh, separate
# them into multiple commands here to take advantage of layering build contexts.

#COPY rcta_installers /home/rcta/rcta_installers
#WORKDIR /home/rcta/rcta_installers/scripts
#RUN ./first_time_setup.sh

COPY --chown=rcta rcta_installers /home/rcta/rcta_installers

#RUN mkdir -p /home/rcta/rcta_installers/scripts
WORKDIR /home/rcta/rcta_installers/scripts

#COPY --chown=rcta rcta_installers/scripts/parse_args.sh ./

# NOTE: In the most recent working build, these were run in the reverse order,
# but was changed to match the order used by first_time_setup.sh

#COPY --chown=rcta rcta_installers/scripts/install_utilities.sh ./
RUN ./install_utilities.sh

#COPY --chown=rcta rcta_installers/scripts/setup_pkg_repos.sh ./
RUN ./setup_pkg_repos.sh

#COPY --chown=rcta rcta_installers/scripts/install_base_deps.sh ./
#COPY --chown=rcta rcta_installers/scripts/ubuntu14.04/ubuntu_base_filesystem ubuntu14.04/ubuntu_base_filesystem
#COPY --chown=rcta rcta_installers/scripts/ubuntu16.04/ubuntu_base_filesystem ubuntu16.04/ubuntu_base_filesystem
#RUN ./install_base_deps.sh
#
#COPY --chown=rcta rcta_installers/scripts/install_dev_deps.sh ./
#COPY --chown=rcta rcta_installers/scripts/ubuntu14.04/ubuntu_dev_filesystem ubuntu14.04/ubuntu_dev_filesystem
#COPY --chown=rcta rcta_installers/scripts/ubuntu16.04/ubuntu_dev_filesystem ubuntu16.04/ubuntu_dev_filesystem
#RUN ./install_dev_deps.sh

#COPY --chown=rcta rcta_installers/scripts/install_deps.sh ./
#COPY --chown=rcta rcta_installers/scripts/ubuntu16.04 ubuntu16.04
RUN ./install_deps.sh

#COPY --chown=rcta rcta_installers/scripts/install_jpl_support.sh ./
#COPY --chown=rcta rcta_installers/jpl ../jpl
RUN ./install_jpl_support.sh

#COPY --chown=rcta rcta_installers/scripts/setup_ros.sh ./
RUN ./setup_ros.sh

#COPY --chown=rcta rcta_installers/scripts/install_rframe_support.sh ./
#COPY --chown=rcta rcta_installers/scripts/ubuntu14.04/gdls-support-* ubuntu14.04/
#COPY --chown=rcta rcta_installers/scripts/ubuntu16.04/gdls-support-* ubuntu16.04/
#RUN ./install_rframe_support.sh

#COPY --chown=rcta rcta_installers/scripts/patch_pcl_vtk.sh ./
#RUN ./patch_pcl_vtk.sh

# TODO: install realsense2?
#COPY --chown=rcta rcta_installers/scripts/install_realsense2.sh ./
#RUN sudo apt-key adv --keyserver keys.gnupg.net --recv-key C8B3A55A6F3EFCDE || sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-key C8B3A55A6F3EFCDE
#RUN ./install_realsense2.sh

# Removing CUDA setup here, since we're baseing off a docker image that has CUDA
# preconfigured. Hopefully there isn't anything special going on in this script
#COPY --chown=rcta rcta_installers/scripts/setup_cuda.sh ./
#RUN echo 'debconf debconf/frontend select Noninteractive' | sudo debconf-set-selections && echo keyboard-configuration keyboard-configuration/layout select 'English (US)' | sudo debconf-set-selections && sudo apt-get install -y keyboard-configuration
#RUN ./setup_cuda.sh

# Removing CUDA setup here, since we're baseing off a docker image that has CUDA
# preconfigured. Hopefully there isn't anything special going on in this script
#COPY --chown=rcta rcta_installers/scripts/setup_cuda.sh ./
#RUN ./setup_cuda.sh

#COPY --chown=rcta rcta_installers/scripts/setup_rcta_externals.sh ./
#COPY --chown=rcta rcta_installers/rcta_externals ../rcta_externals
RUN ./setup_rcta_externals.sh

WORKDIR /home/rcta

#COPY --chown=rcta cmake-3.13.2-Linux-x86_64.tar.gz /home/rcta/cmake-3.13.2-Linux-x86_64.tar.gz
#RUN tar xzvf cmake-3.13.2-Linux-x86_64.tar.gz
#ENV PATH="/home/rcta/cmake-3.13.2-Linux-x86_64:${PATH}"

COPY --chown=rcta rce/src /home/rcta/rce/src
COPY --chown=rcta rce/build-tools /home/rcta/rce/build-tools

WORKDIR /home/rcta/rce
RUN sudo ./build-tools/install_base_deps.sh
RUN ./build-tools/install_ros_deps.sh

WORKDIR /home/rcta

LABEL com.nvidia.volumes.needed="nvidia_driver"
ENV PATH /usr/local/nvidia/bin:${PATH}
ENV LD_LIBRARY_PATH /usr/local/nvidia/lib:/usr/local/nvidia/lib64:${LD_LIBRARY_PATH}

RUN echo 'export LD_LIBRARY_PATH=/usr/local/nvidia/lib:/usr/local/nvidia/lib64:$LD_LIBRARY_PATH' >> /home/rcta/.bashrc

CMD ["bash"]

#RUN echo "source ~/rcta_ws/devel/setup.bash" >> /home/rcta/.bashrc
#
##ENTRYPOINT ["/bin/bash", "-c", "'source ~/sandbox/devel/setup.bash; exec $@'" ]
#
#CMD ["bash"]
